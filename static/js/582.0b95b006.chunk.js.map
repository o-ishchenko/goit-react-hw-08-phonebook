{"version":3,"file":"static/js/582.0b95b006.chunk.js","mappings":"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","sources":["../node_modules/nanoid/index.browser.js","webpack://goit-react-hw-08-phonebook/./src/components/Form/Form.module.css?89ba","components/Form/Form.js","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactItem/ContactItem.module.css?be2b","components/ContactItem/ContactItem.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.js","webpack://goit-react-hw-08-phonebook/./src/pages/ContactsPage/ContactsPage.module.css?0a45","pages/ContactsPage/ContactsPage.js"],"sourcesContent":["import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Form_form__e1yzW\",\"input\":\"Form_input__FTtTw\",\"button\":\"Form_button__8NOIT\"};","import { useState } from 'react';\nimport {\n  // useFetchContactsQuery,\n  useCreateContactMutation,\n} from '../../redux/contactsSlice';\nimport { nanoid } from 'nanoid';\nimport { toast } from 'react-toastify';\nimport s from './Form.module.css';\n\nfunction Form() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  // const { data: contacts } = useFetchContactsQuery();\n  const [createContact, { isLoading }] = useCreateContactMutation();\n\n  let nameId = nanoid();\n  let numberId = nanoid();\n\n  const handleNameChange = event => {\n    setName(event.target.value);\n  };\n\n  const handleNumberChange = event => {\n    setNumber(event.currentTarget.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const data = { name, phone: number };\n    // if (\n    //   contacts.find(\n    //     contact => contact.name.toLowerCase() === name.toLowerCase()\n    //   )\n    // ) {\n    //   toast.info(`${name} is already in contacts`);\n    //   return;\n    // }\n    createContact(data);\n    reset();\n    toast.success('New contact added!');\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label htmlFor={nameId}>Name</label>\n      <input\n        className={s.input}\n        type=\"text\"\n        name=\"name\"\n        id={nameId}\n        value={name}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        onChange={handleNameChange}\n      />\n      <label htmlFor={numberId}>Number</label>\n      <input\n        className={s.input}\n        type=\"tel\"\n        name=\"number\"\n        id={numberId}\n        value={number}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        onChange={handleNumberChange}\n      />\n      <button className={s.button} type=\"submit\" disabled={isLoading}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nexport default Form;\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__vxThR\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { nanoid } from 'nanoid';\nimport s from './Filter.module.css';\n\nlet filterId = nanoid();\nconst Filter = ({ value, onChange }) => (\n  <div className={s.filter}>\n    <label htmlFor={filterId}>Find contacts by name</label>\n    <input\n      type=\"text\"\n      name=\"filter\"\n      id={filterId}\n      value={value}\n      onChange={onChange}\n    />\n  </div>\n);\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ContactItem_item__gxreB\"};","import React from 'react';\nimport { useDeleteContactMutation } from '../../redux/contactsSlice';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport s from './ContactItem.module.css';\n\nfunction ContactItem({ id, name, number }) {\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n  return (\n    <div className={s.item}>\n      <h3>{name}</h3>\n      <p>{number}</p>\n      <button\n        onClick={() => {\n          deleteContact(id);\n          toast.info('Your contact has been deleted');\n        }}\n        disabled={isDeleting}\n      >\n        {isDeleting ? 'Deleting' : 'Delete'}\n      </button>\n    </div>\n  );\n}\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default ContactItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\"};","import React from 'react';\nimport { useFetchContactsQuery } from '../../redux/contactsSlice';\nimport PropTypes from 'prop-types';\nimport ContactItem from '../ContactItem';\nimport s from './ContactList.module.css';\n\nfunction ContactList({ filter }) {\n  const { data: contacts, isFetching } = useFetchContactsQuery();\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    if (!contacts) {\n      return;\n    }\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n  const visibleContacts = getVisibleContacts();\n  return (\n    <>\n      {isFetching && <h3>loading...</h3>}\n      {contacts && (\n        <ul className={s.list}>\n          {visibleContacts.map(({ id, name, phone }) => (\n            <li key={id}>\n              <ContactItem id={id} name={name} number={phone} />\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n}\n\nContactList.propTypes = {\n  filter: PropTypes.string,\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"ContactsPage_title__P3MkR\"};","import React, { useState } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Form from '../../components/Form';\nimport Filter from '../../components/Filter';\nimport ContactList from '../../components/ContactList';\nimport styles from './ContactsPage.module.css';\n\nfunction ContactsPage() {\n  const [filter, setFilter] = useState('');\n\n  const changeFilter = event => {\n    setFilter(event.currentTarget.value);\n  };\n\n  return (\n    <div>\n      <h2 className={styles.title}>Phonebook</h2>\n      <Form />\n      <h2 className={styles.title}>Contacts</h2>\n      <Filter value={filter} onChange={changeFilter} />\n      <ContactList filter={filter} />\n      <ToastContainer autoClose={1500} position=\"top-center\" />\n    </div>\n  );\n}\n\nexport default ContactsPage;\n"],"names":["nanoid","size","id","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase","useState","name","setName","number","setNumber","useCreateContactMutation","createContact","isLoading","nameId","numberId","reset","className","s","onSubmit","event","preventDefault","phone","toast","htmlFor","type","value","pattern","title","required","onChange","target","currentTarget","disabled","filterId","useDeleteContactMutation","deleteContact","isDeleting","onClick","filter","useFetchContactsQuery","contacts","data","isFetching","visibleContacts","normalizedFilter","toLowerCase","contact","includes","getVisibleContacts","map","setFilter","styles","autoClose","position"],"sourceRoot":""}